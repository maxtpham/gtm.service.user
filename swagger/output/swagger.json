{
	"basePath": "/",
	"consumes": [
		"application/json"
	],
	"definitions": {
		"AccountEntity": {
			"properties": {
				"_id": {
					"type": "object"
				},
				"created": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"updated": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"deleted": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"userId": {
					"type": "string"
				},
				"balance": {
					"type": "number",
					"format": "double"
				},
				"balanceGold": {
					"type": "number",
					"format": "double"
				},
				"bonus": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				}
			},
			"required": [
				"_id",
				"userId",
				"balance",
				"balanceGold"
			],
			"type": "object"
		},
		"MAccountView": {
			"properties": {
				"userId": {
					"type": "string"
				},
				"balance": {
					"type": "number",
					"format": "double"
				},
				"balanceGold": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"userId",
				"balance",
				"balanceGold"
			],
			"type": "object"
		},
		"AccountView": {
			"properties": {
				"balance": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"balanceGold": {
					"type": "number",
					"format": "double"
				},
				"bonus": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				}
			},
			"required": [
				"balanceGold"
			],
			"type": "object"
		},
		"MapOfBoolean": {
			"properties": {},
			"type": "object",
			"additionalProperties": {
				"type": "boolean"
			}
		},
		"JwtToken": {
			"properties": {
				"name": {
					"type": "string",
					"description": "User's display name"
				},
				"session": {
					"type": "string"
				},
				"user": {
					"type": "string"
				},
				"roles": {
					"$ref": "#/definitions/MapOfBoolean",
					"description": "List of roles for quicky checking"
				},
				"scope": {
					"$ref": "#/definitions/MapOfBoolean",
					"description": "List of scope or null is all scope (*)"
				},
				"expires": {
					"type": "number",
					"format": "double",
					"description": "Valid until"
				}
			},
			"required": [
				"name",
				"session",
				"user",
				"roles",
				"scope",
				"expires"
			],
			"type": "object"
		},
		"ProviderSession": {
			"properties": {
				"name": {
					"type": "string"
				},
				"access_token": {
					"type": "string"
				},
				"refresh_token": {
					"type": "string",
					"x-nullable": true
				},
				"expires_in": {
					"type": "number",
					"format": "double"
				},
				"token_type": {
					"type": "string"
				}
			},
			"required": [
				"name",
				"access_token",
				"expires_in",
				"token_type"
			],
			"type": "object"
		},
		"SessionView": {
			"properties": {
				"id": {
					"type": "string"
				},
				"userId": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"roles": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"x-nullable": true
				},
				"scope": {
					"type": "string",
					"x-nullable": true
				},
				"expiresIn": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"provider": {
					"$ref": "#/definitions/ProviderSession",
					"x-nullable": true
				},
				"created": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"updated": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				}
			},
			"required": [
				"id",
				"userId",
				"code",
				"name"
			],
			"type": "object"
		},
		"SessionViewWithPagination": {
			"properties": {
				"sessions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SessionView"
					}
				},
				"totalItems": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"sessions",
				"totalItems"
			],
			"type": "object"
		},
		"RoleStatus": {
			"enum": [
				"0",
				"1",
				"2"
			],
			"type": "string"
		},
		"RoleDetailView": {
			"properties": {
				"id": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"scope": {
					"type": "string",
					"x-nullable": true
				},
				"status": {
					"$ref": "#/definitions/RoleStatus",
					"x-nullable": true
				},
				"created": {
					"type": "number",
					"format": "double"
				},
				"updated": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"id",
				"code",
				"created",
				"updated"
			],
			"type": "object"
		},
		"RoleViewWithPagination": {
			"properties": {
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RoleDetailView"
					}
				},
				"totalItems": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"roles",
				"totalItems"
			],
			"type": "object"
		},
		"RoleView": {
			"properties": {
				"code": {
					"type": "string",
					"description": "role code"
				},
				"scope": {
					"type": "string",
					"description": "role scope",
					"x-nullable": true
				},
				"status": {
					"$ref": "#/definitions/RoleStatus",
					"description": "role status",
					"x-nullable": true
				}
			},
			"required": [
				"code"
			],
			"type": "object"
		},
		"MUserView": {
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"houseHolder": {
					"type": "object",
					"x-nullable": true
				}
			},
			"required": [
				"id",
				"name",
				"phone",
				"email"
			],
			"type": "object"
		},
		"MUserFindByPhone": {
			"properties": {
				"id": {
					"type": "string",
					"x-nullable": true
				},
				"name": {
					"type": "string",
					"x-nullable": true
				},
				"phone": {
					"type": "string",
					"x-nullable": true
				},
				"birthday": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"email": {
					"type": "string",
					"x-nullable": true
				},
				"gender": {
					"type": "string",
					"x-nullable": true
				},
				"houseHolder": {
					"type": "object",
					"x-nullable": true
				}
			},
			"type": "object"
		},
		"StatusFindByPhone": {
			"enum": [
				"1",
				"0",
				"2"
			],
			"type": "string"
		},
		"MFindUserByPhone": {
			"properties": {
				"user": {
					"$ref": "#/definitions/MUserFindByPhone"
				},
				"status": {
					"$ref": "#/definitions/StatusFindByPhone"
				}
			},
			"required": [
				"user",
				"status"
			],
			"type": "object"
		},
		"UserRole": {
			"properties": {
				"id": {
					"type": "object"
				},
				"code": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"code"
			],
			"type": "object"
		},
		"UserAccount": {
			"properties": {
				"balance": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"balanceGold": {
					"type": "number",
					"format": "double"
				},
				"bonus": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				}
			},
			"required": [
				"balanceGold"
			],
			"type": "object"
		},
		"UserStatus": {
			"enum": [
				"0",
				"1",
				"2"
			],
			"type": "string"
		},
		"LocationView": {
			"properties": {
				"x": {
					"type": "number",
					"format": "double",
					"description": "longitude"
				},
				"y": {
					"type": "number",
					"format": "double",
					"description": "latitude"
				}
			},
			"required": [
				"x",
				"y"
			],
			"type": "object"
		},
		"ProfileDefault": {
			"properties": {
				"bankRate": {
					"type": "number",
					"format": "double"
				},
				"job": {
					"type": "string"
				},
				"infos": {
					"type": "string"
				},
				"note": {
					"type": "string"
				},
				"identityCard": {
					"type": "string"
				},
				"houseHolder": {
					"type": "string"
				}
			},
			"required": [
				"bankRate",
				"job",
				"infos",
				"note",
				"identityCard",
				"houseHolder"
			],
			"type": "object"
		},
		"ProfileView": {
			"properties": {
				"code": {
					"type": "string",
					"description": "Google/FB profile id"
				},
				"name": {
					"type": "string",
					"description": "Google/FB display name, ex: Thanh Pham"
				},
				"provider": {
					"type": "string",
					"description": "OAuth2 provider: google/facebook/builtin/.."
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserRole"
					},
					"description": "Link to [role] table",
					"x-nullable": true
				},
				"account": {
					"$ref": "#/definitions/UserAccount",
					"description": "user account",
					"x-nullable": true
				},
				"active": {
					"type": "boolean",
					"description": "[true] - active user\r\n[false] - inactive user\r\n[<null>] - is un-approved user state with limited access to the system, this state is auto created by OAuth2 process",
					"x-nullable": true
				},
				"status": {
					"$ref": "#/definitions/UserStatus",
					"x-nullable": true
				},
				"birthday": {
					"type": "number",
					"format": "double",
					"description": "UTC tick only date without time component",
					"x-nullable": true
				},
				"address": {
					"type": "string",
					"x-nullable": true
				},
				"location": {
					"$ref": "#/definitions/LocationView",
					"x-nullable": true
				},
				"phone": {
					"type": "string",
					"x-nullable": true
				},
				"email": {
					"type": "string",
					"x-nullable": true
				},
				"language": {
					"type": "string",
					"description": "en, vn,..",
					"x-nullable": true
				},
				"gender": {
					"type": "string",
					"description": "male/female",
					"x-nullable": true
				},
				"timezone": {
					"type": "number",
					"format": "double",
					"description": "+/- UTC time",
					"x-nullable": true
				},
				"fcmToken": {
					"type": "string",
					"description": "token FCM",
					"x-nullable": true
				},
				"profileDefault": {
					"$ref": "#/definitions/ProfileDefault",
					"description": "profile.default",
					"x-nullable": true
				},
				"isFirstLogin": {
					"type": "boolean",
					"description": "First Login",
					"x-nullable": true
				}
			},
			"required": [
				"code",
				"name",
				"provider"
			],
			"type": "object"
		},
		"MProfileView": {
			"properties": {
				"name": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"birthday": {
					"type": "number",
					"format": "double"
				},
				"address": {
					"type": "string"
				},
				"localtion": {
					"$ref": "#/definitions/LocationView",
					"x-nullable": true
				},
				"identityCard": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"job": {
					"type": "string",
					"x-nullable": true
				},
				"bankRate": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"note": {
					"type": "string",
					"x-nullable": true
				},
				"infos": {
					"type": "string",
					"x-nullable": true
				},
				"houseHolder": {
					"type": "string",
					"x-nullable": true
				}
			},
			"required": [
				"name",
				"gender",
				"birthday",
				"address",
				"identityCard",
				"phone"
			],
			"type": "object"
		},
		"MFCMView": {
			"properties": {
				"fcmToken": {
					"type": "string"
				}
			},
			"required": [
				"fcmToken"
			],
			"type": "object"
		},
		"Binary": {
			"description": "A class representation of the BSON Binary type.",
			"properties": {
				"SUBTYPE_DEFAULT": {
					"type": "number",
					"format": "double"
				},
				"SUBTYPE_FUNCTION": {
					"type": "number",
					"format": "double"
				},
				"SUBTYPE_BYTE_ARRAY": {
					"type": "number",
					"format": "double"
				},
				"SUBTYPE_UUID_OLD": {
					"type": "number",
					"format": "double"
				},
				"SUBTYPE_UUID": {
					"type": "number",
					"format": "double"
				},
				"SUBTYPE_MD5": {
					"type": "number",
					"format": "double"
				},
				"SUBTYPE_USER_DEFINED": {
					"type": "number",
					"format": "double"
				},
				"buffer": {
					"type": "string",
					"format": "byte",
					"description": "A buffer object containing the binary data"
				},
				"sub_type": {
					"type": "number",
					"format": "double",
					"description": "Binary data subtype",
					"x-nullable": true
				},
				"subType": {
					"type": "number",
					"format": "double",
					"description": "Binary data subtype",
					"x-nullable": true
				}
			},
			"required": [
				"SUBTYPE_DEFAULT",
				"SUBTYPE_FUNCTION",
				"SUBTYPE_BYTE_ARRAY",
				"SUBTYPE_UUID_OLD",
				"SUBTYPE_UUID",
				"SUBTYPE_MD5",
				"SUBTYPE_USER_DEFINED",
				"buffer"
			],
			"type": "object"
		},
		"AttachmentView": {
			"properties": {
				"media": {
					"type": "string",
					"description": "HTML Content-Type: image/png, image/jpeg, image/gif,..\r\nThis will be return to browser client to correctly load & show the image"
				},
				"data": {
					"$ref": "#/definitions/Binary",
					"description": "Image raw/binary Content-Data will be stramming to browser client"
				}
			},
			"required": [
				"media",
				"data"
			],
			"type": "object"
		},
		"UserEntity": {
			"properties": {
				"_id": {
					"type": "object"
				},
				"created": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"updated": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"deleted": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"code": {
					"type": "string",
					"description": "Google/FB profile id"
				},
				"name": {
					"type": "string",
					"description": "Google/FB display name, ex: Thanh Pham"
				},
				"provider": {
					"type": "string",
					"description": "OAuth2 provider: google/facebook/builtin/.."
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserRole"
					},
					"description": "Link to [role] table",
					"x-nullable": true
				},
				"account": {
					"$ref": "#/definitions/UserAccount",
					"description": "user account",
					"x-nullable": true
				},
				"active": {
					"type": "boolean",
					"description": "[true] - active user\r\n[false] - inactive user\r\n[<null>] - is un-approved user state with limited access to the system, this state is auto created by OAuth2 process",
					"x-nullable": true
				},
				"status": {
					"$ref": "#/definitions/UserStatus",
					"x-nullable": true
				},
				"birthday": {
					"type": "number",
					"format": "double",
					"description": "UTC tick only date without time component",
					"x-nullable": true
				},
				"address": {
					"type": "string",
					"x-nullable": true
				},
				"location": {
					"$ref": "#/definitions/LocationView",
					"x-nullable": true
				},
				"phone": {
					"type": "string",
					"x-nullable": true
				},
				"email": {
					"type": "string",
					"x-nullable": true
				},
				"language": {
					"type": "string",
					"description": "en, vn,..",
					"x-nullable": true
				},
				"gender": {
					"type": "string",
					"description": "male/female",
					"x-nullable": true
				},
				"timezone": {
					"type": "number",
					"format": "double",
					"description": "+/- UTC time",
					"x-nullable": true
				},
				"fcmToken": {
					"type": "string",
					"description": "token FCM",
					"x-nullable": true
				},
				"profileDefault": {
					"$ref": "#/definitions/ProfileDefault",
					"description": "profile.default",
					"x-nullable": true
				},
				"isFirstLogin": {
					"type": "boolean",
					"description": "First Login",
					"x-nullable": true
				},
				"profiles": {
					"type": "object",
					"description": "With 3 sub-dcouments:\r\n- user.profiles.google: Google profile (auto created by OAuth2 by Google)\r\n- user.profiles.facebook: FaceBook profile (auto created by OAuth2 by Google)\r\n- user.profiles.app: is an application specific profile, need to define a view: ScProfileView { balance: number; bonus: number; LaiXuatMacDinh: number; .. }"
				},
				"avatar": {
					"$ref": "#/definitions/AttachmentView",
					"description": "The OAuth2 authentication process should auto\r\nload up the default user avatar at 1st user login",
					"x-nullable": true
				}
			},
			"required": [
				"_id",
				"code",
				"name",
				"provider",
				"profiles"
			],
			"type": "object"
		},
		"MAvatarView": {
			"properties": {
				"media": {
					"type": "string"
				},
				"data": {
					"type": "string"
				}
			},
			"required": [
				"media",
				"data"
			],
			"type": "object"
		},
		"UserViewDetails": {
			"properties": {
				"code": {
					"type": "string",
					"description": "Google/FB profile id"
				},
				"name": {
					"type": "string",
					"description": "Google/FB display name, ex: Thanh Pham"
				},
				"provider": {
					"type": "string",
					"description": "OAuth2 provider: google/facebook/builtin/.."
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserRole"
					},
					"description": "Link to [role] table",
					"x-nullable": true
				},
				"account": {
					"$ref": "#/definitions/AccountView",
					"description": "user account",
					"x-nullable": true
				},
				"active": {
					"type": "boolean",
					"description": "[true] - active user\r\n[false] - inactive user\r\n[<null>] - is un-approved user state with limited access to the system, this state is auto created by OAuth2 process",
					"x-nullable": true
				},
				"status": {
					"$ref": "#/definitions/UserStatus",
					"x-nullable": true
				},
				"birthday": {
					"type": "number",
					"format": "double",
					"description": "UTC tick only date without time component",
					"x-nullable": true
				},
				"address": {
					"type": "string",
					"x-nullable": true
				},
				"location": {
					"$ref": "#/definitions/LocationView",
					"x-nullable": true
				},
				"phone": {
					"type": "string",
					"x-nullable": true
				},
				"email": {
					"type": "string",
					"x-nullable": true
				},
				"language": {
					"type": "string",
					"description": "en, vn,..",
					"x-nullable": true
				},
				"gender": {
					"type": "string",
					"description": "male/female",
					"x-nullable": true
				},
				"timezone": {
					"type": "number",
					"format": "double",
					"description": "+/- UTC time",
					"x-nullable": true
				},
				"fcmToken": {
					"type": "string",
					"description": "token FCM",
					"x-nullable": true
				},
				"profileDefault": {
					"$ref": "#/definitions/ProfileDefault",
					"description": "profile.default",
					"x-nullable": true
				},
				"isFirstLogin": {
					"type": "boolean",
					"description": "First Login",
					"x-nullable": true
				},
				"profiles": {
					"type": "object",
					"description": "With 3 sub-dcouments:\r\n- user.profiles.google: Google profile (auto created by OAuth2 by Google)\r\n- user.profiles.facebook: FaceBook profile (auto created by OAuth2 by Google)\r\n- user.profiles.app: is an application specific profile, need to define a view: ScProfileView { balance: number; bonus: number; LaiXuatMacDinh: number; .. }"
				},
				"avatar": {
					"$ref": "#/definitions/AttachmentView",
					"description": "The OAuth2 authentication process should auto\r\nload up the default user avatar at 1st user login",
					"x-nullable": true
				},
				"id": {
					"type": "string"
				},
				"created": {
					"type": "number",
					"format": "double"
				},
				"updated": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"code",
				"name",
				"provider",
				"profiles",
				"id",
				"created",
				"updated"
			],
			"type": "object"
		},
		"UserViewWithPagination": {
			"properties": {
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserViewDetails"
					}
				},
				"totalItems": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"users",
				"totalItems"
			],
			"type": "object"
		},
		"RoleType": {
			"enum": [
				"1",
				"2",
				"3"
			],
			"type": "string"
		},
		"UserRoleView": {
			"properties": {
				"userId": {
					"type": "string"
				},
				"roleType": {
					"$ref": "#/definitions/RoleType"
				}
			},
			"required": [
				"userId",
				"roleType"
			],
			"type": "object"
		},
		"UserUpdateView": {
			"properties": {
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string",
					"x-nullable": true
				},
				"birthday": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"email": {
					"type": "string",
					"x-nullable": true
				},
				"gender": {
					"type": "string",
					"x-nullable": true
				},
				"status": {
					"$ref": "#/definitions/UserStatus"
				},
				"role": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserRole"
					}
				},
				"address": {
					"type": "string",
					"x-nullable": true
				}
			},
			"required": [
				"name",
				"status",
				"role"
			],
			"type": "object"
		},
		"UserAccountView": {
			"properties": {
				"balance": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"balanceGold": {
					"type": "number",
					"format": "double"
				},
				"bonus": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				}
			},
			"required": [
				"balanceGold"
			],
			"type": "object"
		}
	},
	"info": {
		"title": "@gtmservice/user",
		"version": "1.0.0",
		"license": {
			"name": "UNLICENSED"
		}
	},
	"paths": {
		"/api/user/v1/account/get-all": {
			"get": {
				"operationId": "GetAccounts",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AccountEntity"
							}
						}
					}
				},
				"description": "get all account",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/account/get-by-id": {
			"get": {
				"operationId": "GetById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/AccountEntity"
						}
					}
				},
				"description": "get account by id",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/account/get-by-user-id": {
			"get": {
				"operationId": "GetByUserId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/AccountEntity"
						}
					}
				},
				"description": "get account by id",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/account/my-account": {
			"get": {
				"operationId": "GetMyAccount",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/AccountEntity"
						}
					}
				},
				"description": "get my-account",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/account/add-balance": {
			"post": {
				"operationId": "AddBalance",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/AccountEntity"
						}
					}
				},
				"description": "add balance of account",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "accountView",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MAccountView"
						}
					}
				]
			}
		},
		"/api/user/v1/account/remove-balance": {
			"post": {
				"operationId": "RemoveBalance",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/AccountEntity"
						}
					}
				},
				"description": "remove balance of account",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "accountView",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MAccountView"
						}
					}
				]
			}
		},
		"/api/user/v1/account/create": {
			"post": {
				"operationId": "AddAccount",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/AccountEntity"
						}
					}
				},
				"description": "add account",
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "account",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountView"
						}
					}
				]
			}
		},
		"/api/user/v1/system/version": {
			"post": {
				"operationId": "GetVersion",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					}
				},
				"description": "Get current system version info",
				"tags": [
					"System"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/system/loggedin": {
			"get": {
				"operationId": "GetLoggedin",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					}
				},
				"description": "Check loggedin status",
				"tags": [
					"System"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/session/current": {
			"get": {
				"operationId": "GetCurrent",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/JwtToken"
						}
					}
				},
				"description": "Check current session info",
				"tags": [
					"Session"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/session/entities": {
			"get": {
				"operationId": "GetEntities",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/SessionViewWithPagination"
						}
					}
				},
				"description": "Get sessions with pagination",
				"tags": [
					"Session"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"in": "query",
						"name": "itemCount",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"in": "query",
						"name": "sortName",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "sortType",
						"required": false,
						"format": "double",
						"type": "number"
					}
				]
			}
		},
		"/api/user/v1/role": {
			"get": {
				"operationId": "GetEntities",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/RoleViewWithPagination"
						}
					}
				},
				"description": "Get Roles",
				"tags": [
					"Role"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"in": "query",
						"name": "itemCount",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"in": "query",
						"name": "sortName",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "sortType",
						"required": false,
						"format": "double",
						"type": "number"
					}
				]
			},
			"post": {
				"operationId": "CreateEntity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/RoleDetailView"
						}
					}
				},
				"description": "Create New Role",
				"tags": [
					"Role"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "roleView",
						"required": false,
						"schema": {
							"$ref": "#/definitions/RoleView"
						}
					}
				]
			}
		},
		"/api/user/v1/role/get-all": {
			"get": {
				"operationId": "GetAllEntities",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/RoleDetailView"
							}
						}
					}
				},
				"description": "Get all role entities",
				"tags": [
					"Role"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/role/{id}": {
			"get": {
				"operationId": "GetEntity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/RoleDetailView"
						}
					}
				},
				"description": "Get Role by Id",
				"tags": [
					"Role"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			},
			"post": {
				"operationId": "UpdateEntity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/RoleDetailView"
						}
					}
				},
				"description": "Update Role",
				"tags": [
					"Role"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "roleView",
						"required": false,
						"schema": {
							"$ref": "#/definitions/RoleView"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteEntity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					}
				},
				"description": "Delete Role",
				"tags": [
					"Role"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/get-user-lite": {
			"get": {
				"operationId": "GetUserLite",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MUserView"
							}
						}
					}
				},
				"description": "Get all user lite",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/user/getById/{id}": {
			"get": {
				"operationId": "GetById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/MUserView"
						}
					}
				},
				"description": "Get user by Id",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/get-by-user-name": {
			"get": {
				"operationId": "GetUserByName",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MUserView"
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userName",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/get-lender-for-app": {
			"get": {
				"operationId": "GetLenderUserForApp",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MUserView"
							}
						}
					}
				},
				"description": "Get lend user for app",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "find",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/find-user": {
			"get": {
				"operationId": "FindUser",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MUserView"
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "find",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/find-user-by-phone": {
			"get": {
				"operationId": "FindUserByPhone",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/MFindUserByPhone"
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "find",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/profile": {
			"get": {
				"operationId": "GetProfileCurrent",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ProfileView"
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "UpdateProfileCurrent",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ProfileView"
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "profileView",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProfileView"
						}
					}
				]
			}
		},
		"/api/user/v1/user/profile-for-mobile": {
			"get": {
				"operationId": "GetProfileCurrentForMobile",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ProfileView"
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/user/v1/user/update-user-profiles": {
			"post": {
				"operationId": "UpdateUserProfiles",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ProfileView"
						}
					}
				},
				"description": "Update user with profiles",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "profile",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MProfileView"
						}
					}
				]
			}
		},
		"/api/user/v1/user/set-fcm-for-mobile": {
			"post": {
				"operationId": "SetFCMForMobile",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					}
				},
				"description": "setFCMForMobile",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "fcms",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MFCMView"
						}
					}
				]
			}
		},
		"/api/user/v1/user/get-fcm-for-mobile": {
			"get": {
				"operationId": "GetFCMForMobile",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/MFCMView"
						}
					}
				},
				"description": "getFCMForMobile",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/update-avatar": {
			"post": {
				"operationId": "UpdateAvatar",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserEntity"
						}
					}
				},
				"description": "Update user with profiles",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "avatar",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MAvatarView"
						}
					}
				]
			}
		},
		"/api/user/v1/user/entities": {
			"get": {
				"operationId": "GetEntities",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserViewWithPagination"
						}
					}
				},
				"description": "Get users with pagination",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "status",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"in": "query",
						"name": "itemCount",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"in": "query",
						"name": "sortName",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "sortType",
						"required": false,
						"format": "double",
						"type": "number"
					}
				]
			}
		},
		"/api/user/v1/user/details/{id}": {
			"get": {
				"operationId": "GetDetailViewById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserViewDetails"
						}
					}
				},
				"description": "Get user details by Id",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/create-or-update-role": {
			"post": {
				"operationId": "CreateOrUpdateUserRole",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ProfileView"
						}
					}
				},
				"description": "Create or update User Role",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "userRoleView",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserRoleView"
						}
					}
				]
			}
		},
		"/api/user/v1/user/update-user-details/{userId}": {
			"post": {
				"operationId": "UpdateUserDetail",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserEntity"
						}
					}
				},
				"description": "Update user details",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "userDetails",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserUpdateView"
						}
					}
				]
			}
		},
		"/api/user/v1/user/get-user-account/{userId}": {
			"get": {
				"operationId": "GetUserAccount",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserAccount"
						}
					}
				},
				"description": "Get user account",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/api/user/v1/user/update-user-account/{userId}": {
			"post": {
				"operationId": "UpdateUserAccount",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserAccount"
						}
					}
				},
				"description": "Update user account",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "userAccountView",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserAccountView"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": false,
						"type": "string"
					}
				]
			}
		}
	},
	"produces": [
		"application/json"
	],
	"swagger": "2.0",
	"securityDefinitions": {
		"jwt": {
			"type": "oauth2",
			"authorizationUrl": "/swagger/authorization/google",
			"tokenUrl": "/swagger/token/google",
			"flow": "accessCode",
			"scopes": {
				"admin": "Grants read and write access to administrative information",
				"write": "Grants write access",
				"read": "Grants read access"
			}
		}
	}
}